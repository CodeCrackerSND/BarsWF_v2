
	static const void* __hello_brook_check_ps30 = 0;

namespace {
	const char __hello_brook_check_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F800000,0x3F800000,0x3F800000,0x3F800000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[1]\n"
		"mov r276.xy__,v0.xyzw\n"
		"mov r269.x___,cb0[l0.x + 0].x000\n"
		"mov r270.xyz_,cb0[l0.x + 0].yzw0\n"
		"call 38 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r275.xyzw\n"
		"ret\n"
		"\n"
		"func 2\n"
		"ieq r0.x___,r17.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r19.xyzw,r18.xy00\n"
		"endif\n"
		"mov r16.x___,r19.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"lt r274.x___,r273.x000,r271.x000\n"
		"if_logicalnz r274.x000\n"
		"mov r272.x___,l12.x000\n"
		"else\n"
		"mov r272.x___,l0.x000\n"
		"endif\n"
		"ret\n"
		"\n"
		"func 38\n"
		"mov r280.xy__,r276.xy00\n"
		"mov r17.x___,l0.x000\n"
		"mov r18.xy__,r280.xy00\n"
		"call 2 \n"
		"mov r283.x___,r16.x000\n"
		"mov r278.x___,r283.x000\n"
		"mov r271.x___,r278.x000\n"
		"mov r273.x___,r269.x000\n"
		"call 37 \n"
		"mov r279.x___,r272.x000\n"
		"mov r281.x___,r279.x000\n"
		"mov r281._y__,l0.0x00\n"
		"mov r281.__z_,l0.00x0\n"
		"mov r281.___w,l0.000x\n"
		"mov r277.xyzw,r281.xyzw\n"
		"mov r275.xyzw,r277.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __hello_brook_check_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_literal l13,0x3F800000,0x3F800000,0x3F800000,0x3F800000\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[3]\n"
		"mov r334.xy__,v0.xyzw\n"
		"mov r325.x___,cb0[l0.x + 0].x000\n"
		"mov r326.xyz_,cb0[l0.x + 0].yzw0\n"
		"mov r327.xyzw,cb0[l0.x + 1].xyzw\n"
		"mov r328.xyzw,cb0[l0.x + 2].xyzw\n"
		"call 41 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r333.xyzw\n"
		"ret\n"
		"\n"
		"func 2\n"
		"ieq r0.x___,r17.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r19.xyzw,r18.xy00\n"
		"endif\n"
		"mov r16.x___,r19.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l0.x000\n"
		"mov r277._y__,l0.0x00\n"
		"mov r277.__z_,l0.00x0\n"
		"mov r277.___w,l0.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r344.xy__,r270.xy00\n"
		"mov r278.xy__,r344.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r345.x___,r274.y000\n"
		"imul r279.x___,r345.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r348.x___,r275.x000\n"
		"imax r346.x___,r275.x000,r348_neg(xyzw).x000\n"
		"mov r349.x___,r271.x000\n"
		"imax r347.x___,r271.x000,r349_neg(xyzw).x000\n"
		"udiv r350.x___,r346.x000,r347.x000\n"
		"inegate r351.x___,r350.x000\n"
		"ixor r352.x___,r275.x000,r271.x000\n"
		"and r352.x___,r352.x000,l5.x000\n"
		"cmov_logical r281.x___,r352.x000,r351.x000,r350.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r353.x___,r271.y000\n"
		"mov r356.x___,r276.x000\n"
		"imax r354.x___,r276.x000,r356_neg(xyzw).x000\n"
		"mov r357.x___,r353.x000\n"
		"imax r355.x___,r353.x000,r357_neg(xyzw).x000\n"
		"udiv r358.x___,r354.x000,r355.x000\n"
		"inegate r359.x___,r358.x000\n"
		"ixor r360.x___,r276.x000,r353.x000\n"
		"and r360.x___,r360.x000,l5.x000\n"
		"cmov_logical r284.x___,r360.x000,r359.x000,r358.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r361.x___,r273.z000\n"
		"mov r362.x___,r271.y000\n"
		"imul r285.x___,r361.x000,r362.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 40\n"
		"lt r332.x___,r331.x000,r329.x000\n"
		"if_logicalnz r332.x000\n"
		"mov r330.x___,l13.x000\n"
		"else\n"
		"mov r330.x___,l0.x000\n"
		"endif\n"
		"ret\n"
		"\n"
		"func 41\n"
		"mov r270.xy__,r334.xy00\n"
		"mov r271.xyzw,r327.xyzw\n"
		"mov r272.xyzw,r328.xyzw\n"
		"call 37 \n"
		"mov r363.xyzw,r269.xyzw\n"
		"mov r340.xyzw,r363.xyzw\n"
		"mov r337.xyzw,r340.xyzw\n"
		"mov r339.xyzw,r340.xyzw\n"
		"mov r341.xy__,r334.xy00\n"
		"mov r17.x___,l0.x000\n"
		"mov r18.xy__,r341.xy00\n"
		"call 2 \n"
		"mov r364.x___,r16.x000\n"
		"mov r336.x___,r364.x000\n"
		"mov r329.x___,r336.x000\n"
		"mov r331.x___,r325.x000\n"
		"call 40 \n"
		"mov r338.x___,r330.x000\n"
		"mov r342.x___,r338.x000\n"
		"mov r342._y__,l0.0x00\n"
		"mov r342.__z_,l0.00x0\n"
		"mov r342.___w,l0.000x\n"
		"mov r335.xyzw,r342.xyzw\n"
		"mov r333.xyzw,r335.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __hello_brook_check_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__hello_brook_check_cal_desc_tech0_pass0 " )
				.image(__hello_brook_check_cal_desc_tech0_pass0)
				.constant(2, brook::CONST_USER_PARAM)
				.output(1, 0)
				.input(0, 0, INPUT_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__hello_brook_check_cal_desc_tech1_pass0 " )
				.image(__hello_brook_check_cal_desc_tech1_pass0)
				.constant(2, brook::CONST_USER_PARAM)
				.constant(1, brook::CONST_STREAMSHAPE)
				.constant(1, brook::CONST_BUFFERSHAPE)
				.output(1, 0)
				.input(0, 0, INPUT_STREAM)
			)
		);
	static const void* __hello_brook_check_cal = &__hello_brook_check_cal_desc;
}
